@using Kosta_Task.Models.Dtos;
@model IEnumerable<DepartmentDto>

<link rel="stylesheet" href="~/css/department_tree.css" />


<div class="container p-4 border">
    <div class="row pb-2">
        <div class="col-md-10">
            <h1>Структура предприятия @(Context.Request.Query["departmentId"])</h1>
        </div>
        <div class="col-md-2 text-end">
            <a asp-action="DepartmentCreate" class="btn btn-outline-primary">Добавить новый отдел</a>
        </div>
    </div>
    <ul class="tree">
        @functions {
            async Task ShowTree(IEnumerable<DepartmentDto> departmentDtos, Guid parentId)
            {
                <ul>
                    @foreach (var departmentDto in departmentDtos.Where(x => x.ParentDepartmentId == parentId))
                    {
                        <li>
                            @if (departmentDtos.Any(x => x.ParentDepartmentId == departmentDto.Id))
                            {
                                <details>
                                    <summary>
                                        <div class="li-item">
                                            <a class="redirect-button" asp-controller="Employee" asp-action="EmployeeIndex" asp-route-departmentId="@departmentDto.Id">@departmentDto.Name</a>
                                            <a asp-action="DepartmentEdit" class="btn btn-success icon-btn" asp-route-departmentId="@departmentDto.Id">
                                                <i class="fas fa-edit fa-2xs"></i>
						                    </a>
                                            <a asp-action="DepartmentDelete" class="btn btn-danger icon-btn" asp-route-departmentId="@departmentDto.Id">
                                                <i class="fas fa-trash fa-2xs"></i>
						                    </a>
                                        </div>
                                    </summary>
                                    @{
                                        await ShowTree(departmentDtos, departmentDto.Id);
                                    }
                                </details>
                            }
                            else
                            {
                                <div class="li-item">
                                    <a class="redirect-button" asp-controller="Employee" asp-action="EmployeeIndex" asp-route-departmentId="@departmentDto.Id">@departmentDto.Name</a>
                                    <a asp-action="DepartmentEdit" class="btn btn-success icon-btn" asp-route-departmentId="@departmentDto.Id">
                                        <i class="fas fa-edit fa-2xs"></i>
						            </a>
                                    <a asp-action="DepartmentDelete" class="btn btn-danger icon-btn" asp-route-departmentId="@departmentDto.Id">
                                        <i class="fas fa-trash fa-2xs"></i>
						            </a>
                                </div>   
                            }
                        </li>
                    }
                </ul>
            }
        }

        @{
            var departmentDtos = Model;
            var rootDepartmentDto = departmentDtos.First(x => x.ParentDepartmentId is null);
        }

        <li>
            <details open>
				<summary>
                    <div class="li-item">
                        <a class="redirect-button" asp-controller="Employee" asp-action="EmployeeIndex" asp-route-departmentId="@rootDepartmentDto.Id">@rootDepartmentDto.Name</a>
                        <a asp-action="DepartmentEdit" class="btn btn-success" asp-route-departmentId="@rootDepartmentDto.Id">
                            <i class="fas fa-edit fa-2xs"></i>
					    </a>
                    </div>
                </summary>
                @{
                    await ShowTree(Model, rootDepartmentDto.Id);
			    }
            </details>
        </li>
        
    </ul>
</div>
